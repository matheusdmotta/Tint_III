@model Fim.Models.cliente

@{
    ViewBag.Title = "AddCliente";
}

<h2>AddCliente</h2>


@using (Html.BeginForm("AddCliente", "Clientes", FormMethod.Post, new { id = "frm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.datanasc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.datanasc, "{yyyy-MM-dd:0}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.datanasc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.categoria, ViewBag.cats as SelectList, new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tutor, "tutor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.tutor, ViewBag.lstclientes as SelectList, new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.tutor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fotopath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="fich" name="fich" onchange="previewFile();" class="form-control" />
                <img alt="" style="width:200px; margin:5px;" id="foto" />
                @Html.ValidationMessageFor(model => model.fotopath, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.foto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Create" class="btn btn-danger" style="font-size:3em">
                    <i class="fa fa-address-card-o"></i>
                </button>
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("ListaClientes","Clientes", new {msg="cancelou insert"})" style="font-size:2em; color:red;">
        <i class="fa fa-ambulance">Clientes</i>
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function previewFile() {

            var file = $("input[type=file]").get(0).files[0];

            if (file) {
                var reader = new FileReader();

                reader.onload = function () {
                    $("#foto").attr("src", reader.result);
                }
                reader.readAsDataURL(file);
            }
        }
    </script>
}
